{"ast":null,"code":"var _jsxFileName = \"/home/roliveirajr/workspace/inGaia/src/components/description/Description.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport { DescriptionContain, ImageLogo, FormSearch, ContainerList } from './Style';\nimport Cards from './../cards/Cards';\nimport imageTop from \"../../img/image-top.svg\";\nimport listQuery from '../../services/query/querys';\nimport { graphql, Query } from 'react-apollo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Description = function (props) {\n  _s();\n\n  const [name, setName] = useState('');\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(listQuery, {\n    variables: {\n      name\n    }\n  });\n\n  function updateState(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  function submitForm(e) {\n    e.preventDefault();\n    console.log(this.state);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DescriptionContain, {\n      children: [/*#__PURE__*/_jsxDEV(ImageLogo, {\n        src: imageTop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormSearch, {\n        onSubmit: submitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"search\",\n          placeholder: \"Search characters\",\n          onChange: updateState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: async event => {\n            setName(event.target.value);\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), console.log(updateState)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContainerList, {\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        name: \"teste\",\n        image: \"teste\",\n        species: \"teste\"\n      }, 'teste', false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Description, \"Zf+WOxn9d8LinXF7yfmSVf5Xgfo=\", true);\n\n_c = Description;\nexport default graphql(listQuery, {\n  name: 'list'\n})(Description);\n\nvar _c;\n\n$RefreshReg$(_c, \"Description\");","map":{"version":3,"sources":["/home/roliveirajr/workspace/inGaia/src/components/description/Description.js"],"names":["React","useState","Fragment","DescriptionContain","ImageLogo","FormSearch","ContainerList","Cards","listQuery","graphql","Query","Description","props","name","setName","data","loading","error","useQuery","variables","updateState","e","setState","target","value","submitForm","preventDefault","console","log","state","imageTop","event"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,kBAAT,EAA6BC,SAA7B,EAAwCC,UAAxC,EAAoDC,aAApD,QAAwE,SAAxE;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,cAA/B;;;AAEA,MAAMC,WAAW,GAAG,UAAUC,KAAV,EAAiB;AAAA;;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEc,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BC,QAAQ,CAACV,SAAD,EAAY;AACjDW,IAAAA,SAAS,EAAE;AAAEN,MAAAA;AAAF;AADsC,GAAZ,CAAzC;;AAIA,WAASO,WAAT,CAAqBC,CAArB,EAAwB;AACpB,SAAKC,QAAL,CAAc;AACVT,MAAAA,IAAI,EAAEQ,CAAC,CAACE,MAAF,CAASC;AADL,KAAd;AAGH;;AAED,WAASC,UAAT,CAAoBJ,CAApB,EAAuB;AACnBA,IAAAA,CAAC,CAACK,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACH;;AACD,sBACI,QAAC,QAAD;AAAA,4BACA,QAAC,kBAAD;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,GAAG,EAAEC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAEL,UAAtB;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,WAAW,EAAC,mBAFhB;AAGI,UAAA,QAAQ,EAAEL;AAHd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,OAAO,EAAE,MAAOW,KAAP,IAAiB;AACtBjB,YAAAA,OAAO,CAACiB,KAAK,CAACR,MAAN,CAAaC,KAAd,CAAP;AACH,WAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,EAYKG,OAAO,CAACC,GAAR,CAAYR,WAAZ,CAZL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAmBA,QAAC,aAAD;AAAA,6BACG,QAAC,KAAD;AACK,QAAA,IAAI,EAAC,OADV;AAEK,QAAA,KAAK,EAAC,OAFX;AAGK,QAAA,OAAO,EAAC;AAHb,SAIS,OAJT;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAnBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAhDD;;GAAMT,W;;KAAAA,W;AAkDN,eAAeF,OAAO,CAACD,SAAD,EAAY;AAC9BK,EAAAA,IAAI,EAAE;AADwB,CAAZ,CAAP,CAEZF,WAFY,CAAf","sourcesContent":["import React, { useState, Fragment } from 'react'\nimport { DescriptionContain, ImageLogo, FormSearch, ContainerList} from './Style'\nimport Cards from './../cards/Cards'\nimport imageTop from '../../img/image-top.svg'\nimport listQuery from '../../services/query/querys'\nimport { graphql, Query } from 'react-apollo'\n\nconst Description = function (props) {\n    const [name, setName] = useState('')\n    const { data, loading, error } = useQuery(listQuery, {\n        variables: { name },       \n    });\n    \n    function updateState(e) {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    function submitForm(e) {\n        e.preventDefault();\n        console.log(this.state)\n    }\n    return (\n        <Fragment>\n        <DescriptionContain>\n            <ImageLogo src={imageTop} />\n            <FormSearch onSubmit={submitForm}>\n                <input \n                    name=\"search\" \n                    placeholder=\"Search characters\"\n                    onChange={updateState}\n                />\n                <button \n                    type=\"submit\"\n                    onClick={async (event) => {\n                        setName(event.target.value)\n                    }}\n                >Search</button>\n                {console.log(updateState)}\n            </FormSearch>\n        </DescriptionContain>\n\n        <ContainerList>\n           <Cards \n                name='teste'\n                image='teste'\n                species='teste'\n                key='teste'\n            />\n        </ContainerList>\n        \n\n    </Fragment>\n    )\n}\n\nexport default graphql(listQuery, {\n    name: 'list'\n})(Description);"]},"metadata":{},"sourceType":"module"}