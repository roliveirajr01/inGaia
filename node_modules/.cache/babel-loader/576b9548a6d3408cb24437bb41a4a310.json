{"ast":null,"code":"var _jsxFileName = \"/home/roliveirajr/workspace/inGaia/src/components/description/Description.js\";\nimport React, { Component, Fragment } from 'react';\nimport { DescriptionContain, ImageLogo, FormSearch } from './Style';\nimport imageTop from \"../../img/image-top.svg\";\nimport { graphql } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Description extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderTodoList = function (getList) {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: getList.map(function (list, index) {\n          /*#__PURE__*/\n          _jsxDEV(\"li\", {\n            children: list.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  render() {\n    const {\n      list\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: list.loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Teste\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this) : this.renderTodoList(list.characters.results)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst TodosQuery = gql`\n    query {\n        characters(page: 2, filter: { name: \"rick\" }) {\n            results {\n                name\n                image\n                species\n            }\n        }\n    }\n`;\nexport default graphql(TodosQuery, {\n  name: 'list'\n})(Description);","map":{"version":3,"sources":["/home/roliveirajr/workspace/inGaia/src/components/description/Description.js"],"names":["React","Component","Fragment","DescriptionContain","ImageLogo","FormSearch","graphql","gql","Description","renderTodoList","getList","map","list","index","name","render","props","loading","characters","results","TodosQuery"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,kBAAT,EAA6BC,SAA7B,EAAwCC,UAAxC,QAA0D,SAA1D;;AAGA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;;AAGA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAChCQ,cADgC,GACf,UAASC,OAAT,EAAkB;AAC/B,0BACI;AAAA,kBACCA,OAAO,CAACC,GAAR,CAAY,UAASC,IAAT,EAAeC,KAAf,EAAqB;AAC9B;AAAA;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA;AACH,SAFA;AADD;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KAT+B;AAAA;;AAWhCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEH,MAAAA;AAAF,QAAW,KAAKI,KAAtB;AACA,wBACI,QAAC,QAAD;AAAA,gBACKJ,IAAI,CAACK,OAAL,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GACgB,KAAKR,cAAL,CAAoBG,IAAI,CAACM,UAAL,CAAgBC,OAApC;AAFrB;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAnB+B;;AAuBpC,MAAMC,UAAU,GAAGb,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,eAAeD,OAAO,CAACc,UAAD,EAAa;AAC/BN,EAAAA,IAAI,EAAE;AADyB,CAAb,CAAP,CAEZN,WAFY,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { DescriptionContain, ImageLogo, FormSearch } from './Style'\nimport imageTop from '../../img/image-top.svg'\n\nimport { graphql } from 'react-apollo'\nimport gql from 'graphql-tag';\n\n\nclass Description extends Component {\n    renderTodoList = function(getList) {\n        return (\n            <ul>\n            {getList.map(function(list, index){\n                <li>{list.name}</li>\n            })}\n            </ul>\n        )\n    }\n\n    render() {\n        const { list } = this.props;\n        return(\n            <Fragment>\n                {list.loading\n                ? <p>Teste</p> : this.renderTodoList(list.characters.results) }\n            </Fragment>\n        )\n    }\n}\n\n\nconst TodosQuery = gql`\n    query {\n        characters(page: 2, filter: { name: \"rick\" }) {\n            results {\n                name\n                image\n                species\n            }\n        }\n    }\n`\n\nexport default graphql(TodosQuery, {\n    name: 'list'\n})(Description);"]},"metadata":{},"sourceType":"module"}