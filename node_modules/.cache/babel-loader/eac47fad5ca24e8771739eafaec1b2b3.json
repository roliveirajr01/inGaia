{"ast":null,"code":"var _jsxFileName = \"/home/roliveirajr/workspace/inGaia/src/components/description/Description.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport { DescriptionContain, ImageLogo, FormSearch, ContainerList } from './Style';\nimport Cards from './../cards/Cards';\nimport imageTop from \"../../img/image-top.svg\";\nimport listQuery from '../../services/query/querys';\nimport { graphql, Query } from 'react-apollo';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Description = function (props) {\n  _s();\n\n  const [runQuery, {\n    data,\n    loading,\n    error\n  }] = useLazyQuery(listQuery);\n\n  if (data) {\n    console.log(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DescriptionContain, {\n      children: [/*#__PURE__*/_jsxDEV(ImageLogo, {\n        src: imageTop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormSearch, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"search\",\n          placeholder: \"Search characters\",\n          onChange: event => {\n            name = event.target.value;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: event => {\n            event.preventDefault(); // query is executed here\n\n            runQuery({\n              variables: {\n                name\n              },\n              // note: name = property shorthand\n              suspend: false\n            });\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), console.log(updateState)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContainerList, {\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        name: \"teste\",\n        image: \"teste\",\n        species: \"teste\"\n      }, 'teste', false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Description, \"UqPn3yMmypFV60M7mn1ThJ3Vpsc=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = Description;\nexport default graphql(listQuery, {\n  name: 'list'\n})(Description);\n\nvar _c;\n\n$RefreshReg$(_c, \"Description\");","map":{"version":3,"sources":["/home/roliveirajr/workspace/inGaia/src/components/description/Description.js"],"names":["React","useState","Fragment","DescriptionContain","ImageLogo","FormSearch","ContainerList","Cards","listQuery","graphql","Query","useLazyQuery","Description","props","runQuery","data","loading","error","console","log","imageTop","event","name","target","value","preventDefault","variables","suspend","updateState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,kBAAT,EAA6BC,SAA7B,EAAwCC,UAAxC,EAAoDC,aAApD,QAAwE,SAAxE;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,cAA/B;AACA,SAAQC,YAAR,QAA2B,qBAA3B;;;AAEA,MAAMC,WAAW,GAAG,UAAUC,KAAV,EAAiB;AAAA;;AACjC,QAAM,CAACC,QAAD,EAAW;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAX,IAAuCN,YAAY,CAACH,SAAD,CAAzD;;AAEA,MAAIO,IAAJ,EAAU;AACNG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD;;AAEH,sBACI,QAAC,QAAD;AAAA,4BACA,QAAC,kBAAD;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,GAAG,EAAEK;AAAhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,WAAW,EAAC,mBAFhB;AAGI,UAAA,QAAQ,EAAGC,KAAD,IAAW;AAACC,YAAAA,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAApB;AAA2B;AAHrD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,OAAO,EACFH,KAAD,IAAW;AACTA,YAAAA,KAAK,CAACI,cAAN,GADS,CAET;;AACAX,YAAAA,QAAQ,CAAC;AACPY,cAAAA,SAAS,EAAE;AAAEJ,gBAAAA;AAAF,eADJ;AACc;AACrBK,cAAAA,OAAO,EAAE;AAFF,aAAD,CAAR;AAID,WAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,EAkBKT,OAAO,CAACC,GAAR,CAAYS,WAAZ,CAlBL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAyBA,QAAC,aAAD;AAAA,6BACG,QAAC,KAAD;AACK,QAAA,IAAI,EAAC,OADV;AAEK,QAAA,KAAK,EAAC,OAFX;AAGK,QAAA,OAAO,EAAC;AAHb,SAIS,OAJT;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAzBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CA7CD;;GAAMhB,W;UAC2CD,Y;;;KAD3CC,W;AA+CN,eAAeH,OAAO,CAACD,SAAD,EAAY;AAC9Bc,EAAAA,IAAI,EAAE;AADwB,CAAZ,CAAP,CAEZV,WAFY,CAAf","sourcesContent":["import React, { useState, Fragment } from 'react'\nimport { DescriptionContain, ImageLogo, FormSearch, ContainerList} from './Style'\nimport Cards from './../cards/Cards'\nimport imageTop from '../../img/image-top.svg'\nimport listQuery from '../../services/query/querys'\nimport { graphql, Query } from 'react-apollo'\nimport {useLazyQuery} from '@apollo/react-hooks';\n\nconst Description = function (props) {\n    const [runQuery, { data, loading, error }] = useLazyQuery(listQuery);\n\n    if (data) {\n        console.log(data);\n      }\n\n    return (\n        <Fragment>\n        <DescriptionContain>\n            <ImageLogo src={imageTop} />\n            <FormSearch>\n                <input \n                    name=\"search\" \n                    placeholder=\"Search characters\"\n                    onChange={(event) => {name = event.target.value }}\n                />\n                <button \n                    type=\"submit\"\n                    onClick={\n                        (event) => {\n                          event.preventDefault();\n                          // query is executed here\n                          runQuery({\n                            variables: { name }, // note: name = property shorthand\n                            suspend: false\n                          })\n                        }}\n                >Search</button>\n                {console.log(updateState)}\n            </FormSearch>\n        </DescriptionContain>\n\n        <ContainerList>\n           <Cards \n                name='teste'\n                image='teste'\n                species='teste'\n                key='teste'\n            />\n        </ContainerList>\n        \n\n    </Fragment>\n    )\n}\n\nexport default graphql(listQuery, {\n    name: 'list'\n})(Description);"]},"metadata":{},"sourceType":"module"}