{"ast":null,"code":"var _jsxFileName = \"/home/roliveirajr/workspace/inGaia/src/components/description/Description.js\";\nimport React, { Component, Fragment } from 'react';\nimport { DescriptionContain, ImageLogo, FormSearch, ContainerList } from './Style';\nimport Cards from './../cards/Cards';\nimport imageTop from \"../../img/image-top.svg\";\nimport listQuery from '../../services/query/querys';\nimport { graphql, Query } from 'react-apollo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Description = function (props) {\n  var _list$characters, _list$characters$resu;\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DescriptionContain, {\n      children: [/*#__PURE__*/_jsxDEV(ImageLogo, {\n        src: imageTop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormSearch, {\n        onSubmit: this.submitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"search\",\n          placeholder: \"Search characters\",\n          onChange: this.updateState,\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Query, {\n          query: listQuery,\n          skip: !name,\n          variables: {\n            name: name\n          },\n          children: ({\n            loading,\n            error,\n            data\n          }) => {\n            if (loading) return null;\n            if (error) throw error;\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 32\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ContainerList, {\n      children: !list.loading ? (_list$characters = list.characters) === null || _list$characters === void 0 ? void 0 : (_list$characters$resu = _list$characters.results) === null || _list$characters$resu === void 0 ? void 0 : _list$characters$resu.map(function (items, index) {\n        return /*#__PURE__*/_jsxDEV(Cards, {\n          name: items.name,\n          image: items.image,\n          species: items.species\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 24\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"CARREGANDO....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Description;\nexport default graphql(listQuery, {\n  name: 'list'\n})(Description);\n\nvar _c;\n\n$RefreshReg$(_c, \"Description\");","map":{"version":3,"sources":["/home/roliveirajr/workspace/inGaia/src/components/description/Description.js"],"names":["React","Component","Fragment","DescriptionContain","ImageLogo","FormSearch","ContainerList","Cards","listQuery","graphql","Query","Description","props","imageTop","submitForm","updateState","name","loading","error","data","list","characters","results","map","items","index","image","species"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,kBAAT,EAA6BC,SAA7B,EAAwCC,UAAxC,EAAoDC,aAApD,QAAwE,SAAxE;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,cAA/B;;;AAEA,MAAMC,WAAW,GAAG,UAAUC,KAAV,EAAiB;AAAA;;AACjC,sBACI,QAAC,QAAD;AAAA,4BACA,QAAC,kBAAD;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,GAAG,EAAEC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAE,KAAKC,UAA3B;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,WAAW,EAAC,mBAFhB;AAGI,UAAA,QAAQ,EAAE,KAAKC,WAHnB;AAII,UAAA,KAAK,EAAEC;AAJX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,KAAD;AAAO,UAAA,KAAK,EAAER,SAAd;AAAyB,UAAA,IAAI,EAAE,CAACQ,IAAhC;AAAsC,UAAA,SAAS,EAAE;AAACA,YAAAA,IAAI,EAAEA;AAAP,WAAjD;AAAA,oBACK,CAAC;AAACC,YAAAA,OAAD;AAAUC,YAAAA,KAAV;AAAiBC,YAAAA;AAAjB,WAAD,KAA4B;AACzB,gBAAGF,OAAH,EAAY,OAAO,IAAP;AACZ,gBAAIC,KAAJ,EAAW,MAAMA,KAAN;AACX,gCAAO;AAAA,wBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH;AALL;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAcI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAqBA,QAAC,aAAD;AAAA,gBAEI,CAACC,IAAI,CAACH,OAAN,uBACAG,IAAI,CAACC,UADL,8EACA,iBAAiBC,OADjB,0DACA,sBAA0BC,GAA1B,CAA8B,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AAEjD,4BAAO,QAAC,KAAD;AACC,UAAA,IAAI,EAAED,KAAK,CAACR,IADb;AAEC,UAAA,KAAK,EAAEQ,KAAK,CAACE,KAFd;AAGC,UAAA,OAAO,EAAEF,KAAK,CAACG;AAHhB,WAIMF,KAJN;AAAA;AAAA;AAAA;AAAA,gBAAP;AAOH,OATD,CADA,gBAUK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZT;AAAA;AAAA;AAAA;AAAA,YArBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH,CA1CD;;KAAMd,W;AA4CN,eAAeF,OAAO,CAACD,SAAD,EAAY;AAC9BQ,EAAAA,IAAI,EAAE;AADwB,CAAZ,CAAP,CAEZL,WAFY,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport { DescriptionContain, ImageLogo, FormSearch, ContainerList} from './Style'\nimport Cards from './../cards/Cards'\nimport imageTop from '../../img/image-top.svg'\nimport listQuery from '../../services/query/querys'\nimport { graphql, Query } from 'react-apollo'\n\nconst Description = function (props) {\n    return (\n        <Fragment>\n        <DescriptionContain>\n            <ImageLogo src={imageTop} />\n            <FormSearch onSubmit={this.submitForm}>\n                <input \n                    name=\"search\" \n                    placeholder=\"Search characters\"\n                    onChange={this.updateState}\n                    value={name}\n                />\n                <Query query={listQuery} skip={!name} variables={{name: name}}>\n                    {({loading, error, data}) => {\n                        if(loading) return null;\n                        if (error) throw error;\n                        return <p>{data}</p>\n                    }}\n                </Query>\n                <button type=\"submit\">Search</button>\n            </FormSearch>\n        </DescriptionContain>\n\n        <ContainerList>\n            {\n            !list.loading ?  \n            list.characters?.results?.map(function(items, index) {\n                 \n                return <Cards \n                        name={items.name}\n                        image={items.image}\n                        species={items.species}\n                        key={index}\n                    />\n                \n            }) : <p>CARREGANDO....</p>\n            }\n        </ContainerList>\n        \n\n    </Fragment>\n    )\n}\n\nexport default graphql(listQuery, {\n    name: 'list'\n})(Description);"]},"metadata":{},"sourceType":"module"}